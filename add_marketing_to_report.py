import os
import glob
import re
import sys
from datetime import datetime

def add_marketing_block_to_report(report_path):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±–ª–æ–∫ –ø–æ—Å–ª–µ –≤–≤–æ–¥–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞"""
    try:
        print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {report_path}")
        
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        try:
            with open(report_path, 'r', encoding='utf-8-sig') as f:
                content = f.read()
        except UnicodeDecodeError:
            # –ü—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
            try:
                with open(report_path, 'r', encoding='utf-8') as f:
                    content = f.read()
            except UnicodeDecodeError:
                try:
                    with open(report_path, 'r', encoding='cp1251') as f:
                        content = f.read()
                except UnicodeDecodeError:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª {report_path} –Ω–∏ –≤ –æ–¥–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–µ")
                    return None
        
        # –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±–ª–æ–∫
        market_block = "\n\nüí∏ –•–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤ –î—É–±–∞–µ –≤—ã–≥–æ–¥–Ω–æ –∏ –±–µ–∑ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤?\n\n"
        market_block += "üìç–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ –û–ê–≠  [–ù–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç–µ](http://89.169.166.179:8502/) ‚Äî –¢–û–ü-3, 5 —Å–∞–º—ã—Ö –Ω–µ–¥–æ—Ä–æ–≥–∏—Ö –∫–≤–∞—Ä—Ç–∏—Ä –≤ –∫–∞–∂–¥–æ–º —Ä–∞–π–æ–Ω–µ.\n"
        market_block += "–§–∏–ª—å—Ç—Ä—É–π—Ç–µ –ø–æ –ø–ª–æ—â–∞–¥–∏, —Å—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Ü–µ–Ω—ã –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤!\n\n"
        market_block += "üìä –£–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–≤–∞–¥—Ä–∞—Ç—É—Ä–µ\n"
        market_block += "üìâ –°–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã –ø–æ —Ä–∞–π–æ–Ω–∞–º\n"
        market_block += "üíº –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –ø–µ—Ä–µ–µ–∑–¥–∞\n\n"
        
        # –ò—â–µ–º –∫–æ–Ω–µ—Ü –≤–≤–æ–¥–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ "–¢—Ä–∏ —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä—ã (–ø–ª–æ—â–∞–¥—å –¥–æ 40 –∫–≤.–º.) –≤ –∫–∞–∂–¥–æ–π –ª–æ–∫–∞—Ü–∏–∏:"
        intro_pattern = r".*—Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö.*–∫–≤–∞—Ä—Ç–∏—Ä.*–≤ –∫–∞–∂–¥–æ–π –ª–æ–∫–∞—Ü–∏–∏:.*?\n"
        intro_match = re.search(intro_pattern, content, re.DOTALL)
        
        if intro_match:
            # –í—Å—Ç–∞–≤–ª—è–µ–º –±–ª–æ–∫ –ø–æ—Å–ª–µ –≤–≤–æ–¥–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞
            insert_position = intro_match.end()
            new_content = content[:insert_position] + market_block + content[insert_position:]
            print("–ù–∞–π–¥–µ–Ω –≤–≤–æ–¥–Ω—ã–π –±–ª–æ–∫, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±–ª–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ –Ω–µ–≥–æ")
        else:
            # –ï—Å–ª–∏ –≤–≤–æ–¥–Ω—ã–π –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
            first_newline = content.find('\n')
            if first_newline != -1:
                new_content = content[:first_newline+1] + market_block + content[first_newline+1:]
                print("–í–≤–æ–¥–Ω—ã–π –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±–ª–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏")
            else:
                new_content = content + "\n" + market_block
                print("–í —Ñ–∞–π–ª–µ –Ω–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±–ª–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω–µ—Ü")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–º –±–ª–æ–∫–æ–º
        file_name = os.path.basename(report_path)
        file_dir = os.path.dirname(report_path)
        base_name, ext = os.path.splitext(file_name)
        
        # –î–æ–±–∞–≤–ª—è–µ–º _marketing –≤ –∏–º—è —Ñ–∞–π–ª–∞
        new_file_name = f"{base_name}_with_marketing{ext}"
        new_file_path = os.path.join(file_dir, new_file_name)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        with open(new_file_path, 'w', encoding='utf-8-sig') as f:
            f.write(new_content)
            
        print(f"–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ñ–∞–π–ª: {new_file_path}")
        return new_file_path
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–≥–æ –±–ª–æ–∫–∞: {e}")
        return None

def get_latest_report(pattern="reports/cheapest_apartments_with_urls_*.txt"):
    """–ù–∞—Ö–æ–¥–∏—Ç —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞ –ø–æ —à–∞–±–ª–æ–Ω—É"""
    try:
        files = glob.glob(pattern)
        if not files:
            print(f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –ø–æ —à–∞–±–ª–æ–Ω—É: {pattern}")
            return None
            
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è (—Å–∞–º—ã–π –Ω–æ–≤—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π)
        latest_file = max(files, key=os.path.getctime)
        print(f"–ù–∞–π–¥–µ–Ω —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Ñ–∞–π–ª: {latest_file}")
        return latest_file
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–≤–µ–∂–µ–≥–æ —Ñ–∞–π–ª–∞: {e}")
        return None

def main():
    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ –∏—â–µ–º —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π
    if len(sys.argv) > 1:
        report_path = sys.argv[1]
    else:
        report_path = get_latest_report()
    
    if not report_path:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±–ª–æ–∫
    processed_file = add_marketing_block_to_report(report_path)
    
    if processed_file:
        print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –ù–æ–≤—ã–π —Ñ–∞–π–ª: {processed_file}")
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª")

if __name__ == "__main__":
    main() 